<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>sdzx-service</artifactId>
        <groupId>com.sd</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>service-user</artifactId>
    <packaging>jar</packaging>

    <dependencies>

        <dependency>
            <groupId>com.sd</groupId>
            <artifactId>service-product-client</artifactId>
            <version>1.0-SNAPSHOT</version>
<!--            <scope>compile</scope>-->

        </dependency>
    </dependencies>
    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
<!--        <docker.repostory>124.70.53.41</docker.repostory>-->
<!--        <docker.registry.name>sdzx</docker.registry.name>-->
    </properties>


<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>1.2.2</version>-->

<!--                &lt;!&ndash;将插件绑定在某个phase执行&ndash;&gt;-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>build-image</id>-->
<!--                        &lt;!&ndash;将插件绑定在package这个phase(阶段)上。也就是说，用户只需执行mvn package，就会自动执行mvn docker:build&ndash;&gt;-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                            <goal>push</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->

<!--                <configuration>-->

<!--                    <serverId>harbor</serverId>-->
<!--                    <registryUrl>http://${docker.repostory}</registryUrl>-->
<!--                    <dockerHost>http://124.70.53.41:2375</dockerHost>  &lt;!&ndash; 配置docker主机地址 &ndash;&gt;-->

<!--                    &lt;!&ndash;指定生成的镜像名&ndash;&gt;-->
<!--                    <imageName>${docker.repostory}/${docker.registry.name}/${project.artifactId}:${project.version}</imageName>-->

<!--                    &lt;!&ndash; 指定 dockerfile 路径&ndash;&gt;-->
<!--                    <dockerDirectory>${project.basedir}</dockerDirectory>-->

<!--                    &lt;!&ndash; 是否跳过docker构建 &ndash;&gt;-->
<!--                    <skipDockerBuild>false</skipDockerBuild>-->

<!--                </configuration>-->

<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; 指定该 Main Class 为全局的唯一入口 &ndash;&gt;-->
<!--                    <mainClass>com.sd.sdzx.user.UserApplication</mainClass>-->
<!--                    <layout>ZIP</layout>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            &lt;!&ndash; 将依赖到的包都放进去 &ndash;&gt;-->
<!--                            <goal>repackage</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->





</project>